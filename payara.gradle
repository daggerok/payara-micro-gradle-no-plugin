import org.apache.tools.ant.taskdefs.condition.Os

static String command(Project project) {
    def payaraMicroJar = project.configurations.payaraMicro.asPath
    "java -jar ${payaraMicroJar} --autoBindHttp --clusterName app --deploy ${project.war.archivePath}"
}

static String outputUberJar(Project project) {
    "${project.buildDir}/${project.name}-${project.version}-microbundle.jar"
}

static String[] runInShell(String... command) {
    String[] shell = Os.isFamily(Os.FAMILY_WINDOWS) ? ['cmd', '/c'] : ['sh', '-c']
    shell + command
}

apply plugin: 'base'
defaultTasks('clean', 'bundle')

apply plugin: 'war'
// workaround for context-root: '/'
war.archiveName = 'ROOT.war'

configurations { payaraMicro }
// 5.183 is broken, Uber Jar is fixed with 5.184
dependencies { payaraMicro 'fish.payara.extras:payara-micro:5.182' }

task bundle(type: Exec) {
    description('build payara-micro uber jar using existing war file.')
    shouldRunAfter('clean', 'war')
    dependsOn('war')
    commandLine runInShell("${command(project)} --outputUberJar ${outputUberJar(project)}")
}

task start(type: Exec) {
    description("run payara-micro uber jar using 'java -jar ${outputUberJar(project)}' command.")
    shouldRunAfter('clean', 'war', 'bundle')
    dependsOn('bundle')
    commandLine runInShell("java -jar ${outputUberJar(project)}")
}

assemble.dependsOn(bundle)
